Utility to add debug info into coff file generated by fasm.

Fasm compilation rules:
fasm -s fasfilename asmfilename objfilename

Usage: pecvt [-h] [-v] [-t] [-m#] fasfilename resultedobjfilename

fasfilename - file with symbolic information generated by fasm with -s option
resultedobjfilename - name of generated obj file with debug info included (it can be equal input obj file name)

Options:
-h show help info
-v show information extracted from fas file (very long and slow listing!)
-t by default pecvt check timestamp of input obj file and timestamp of output obj file (if it present). 
If timestamps equal - no conversion doing (supposed that file not changed). With -t option 
this checking blocked. If name of input obj file equal name of output file name - checking always blocked.
-m expand macros code. 
-m0 not expand macro
-m1 (default) macro invoke line set as breakable
-m2 macro invoke line skiped
If option not used all code inside macro mapped on line at which macro invoked.
If option m1 used than first line of macro with real code mapped on line at which macro invoked,
but next lines in macro mapped on line inside macro. 
If option m2 used than all real code lines inside macro mapped on line at which macro invoked,
but in this case place at which macro invoked not used as breakable point. If you set 
breakpoint on macro invoke line than debugger stop AFTER! macro finished.
Nested macro supported.
Breakpoints in macro also supported (at least in VS2005) - this breakpoint stop program at 
each point when macro invoked. 
Translation from source code to disassembler and back worked fine but VS2005 ask for real 
place in disassembler (show list of addresses connected with this source line).
I'm not check ability of VS to support big count of macro inclusion - may be problems.



History:
15 mar 2009 - added in macro debugging ability
06 mar 2009 - added multiply code section support
15 feb 2009 - initial release
